Dans le rapport il doit y avoir :

1. Introduction
2. Modele Entite-association (commenté)
3. Modele relationnel
4. Requete 
  4.a. Principales
5. Interface
6. Utilisation


Requetes :
- renseignement sur un utilisateur
select * from ELEVE where NOM_ELEVE = ' ' or NUMERO_ELEVE = ' ';
select RECETTE.* from RECETTE, ELEVE where ELEVE.NUMERO_ELEVE = RECETTE.NUMERO_CREATEUR and NOM_ELEVE = ' ';

- selection des recettes par mots-clés, selon un intervalle de budget, par eleve ayant proposé la recette
select * from RECETTE where NOM_RECETTE = ' ' or CATEGORIE = ' ';
select * from RECETTE where BUDGET < ' ' and BUDGET > ' ';
select * from RECETTE where NOM_CREATEUR = ' ';
select RECETTE.* from RECETTE, COMPOSE, ALIMENT where COMPOSE.MOT_CLE = '1' and ALIMENT.NUMERO_ALIMENT = COMPOSE.NUMERO_ALIMENT and COMPOSE.NUMERO_RECETTE = RECETTE.NUMERO_RECETTE and ALIMENT.NOM_ALIMENT = ' ';

- faire la moyenne des prix des recettes proposées par un eleve donné
select avg(RECETTE.BUDGET) as MOYENNE_DE_PRIX from RECETTE, ELEVE where RECETTE.NUMERO_CREATEUR = ELEVE.NUMERO_ELEVE and ELEVE.NOM_ELEVE = ' ';

- pouvoir connaitre le nombre de recette disponible pour chaque catégorie
select count(*) as NOMBRE_DE_RECETTE from RECETTE where CATEGORIE = ' '; 

(- classer les recettes selon le meilleur rapport qualité/prix)
(à revoir...) select * from RECETTE, NOTE where RECETTE.NUMERO_RECETTE = NOTE.NUMERO_RECETTE group by BUDGET order by RECETTE.NOTE_GASTRONOMIQUE
(- classer les deserts les plus rapides à réaliser)
(- classer les plats les plus commentés)
(- calculer l'eleve dont l'ecart type des notes des notes à la moyenne de chacun des plats qu'il a commenté est le plus faible)

- ajout d'une recette, d'un élève, d'un aliment
insert into RECETTE values ( numero, etc); commit;

- suppression d'une recette, d'un aliment, d'un eleve
delete from RECETTE where 'conditions';


